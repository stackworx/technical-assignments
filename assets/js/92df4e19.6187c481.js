"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[524],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1520:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=n(4996),l=["components"],s={title:"Brief"},u=void 0,c={unversionedId:"python/brief",id:"python/brief",title:"Brief",description:"Please install the required tools before continuing",source:"@site/docs/python/brief.mdx",sourceDirName:"python",slug:"/python/brief",permalink:"/technical-assignments/docs/python/brief",editUrl:"https://github.com/stackworx/technical-assignments/edit/master/docs/docs/python/brief.mdx",tags:[],version:"current",frontMatter:{title:"Brief"},sidebar:"someSidebar",previous:{title:"Requirements",permalink:"/technical-assignments/docs/python/requirements"},next:{title:"Requirements",permalink:"/technical-assignments/docs/sql/requirements"}},p={},d=[{value:"Requirements",id:"requirements",level:4},{value:"Bonus Requirements:",id:"bonus-requirements",level:3},{value:"Help",id:"help",level:3}],m={toc:d};function h(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Please install the ",(0,o.kt)("a",{parentName:"p",href:"requirements"},"required")," tools before continuing"),(0,o.kt)("p",null,"The goal of this assignment is to test your python proficiency, through doing what python does best - a bit of everything.\nThe project is comprised of 2 parts."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Nominatim: An address lookup service used widely in the community. This service takes a geo-coordinate and returns an address."),(0,o.kt)("li",{parentName:"ul"},"Postgres Table to Flask REST interface: This enables interaction with a data table, by making it available through a GET request in JSON.")),(0,o.kt)("p",null,"First download the project zip from ",(0,o.kt)("a",{href:(0,i.Z)("project/python-master.zip")},"here"),"."),(0,o.kt)("p",null,"Unzip the file and check the README.md to get going."),(0,o.kt)("h4",{id:"requirements"},"Requirements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You will only be required to submit your code, and not the generated data as well.")),(0,o.kt)("p",null,"Part 1:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Write a Flask endpoint, which takes a geo-coordinate (lat, lng) as input, and returns the physical address of the coordinate as JSON output."),(0,o.kt)("li",{parentName:"ul"},"Conversely, write a Flask endpoint which will take an address, and return the geo-coordinates (lat,lng) for that address."),(0,o.kt)("li",{parentName:"ul"},"You can use the provided Nominatim for the address lookup, or any alternative API service. The config for Nominatim is currently set to Maldives, so be sure to change that to South Africa, to retrieve more relevant data."),(0,o.kt)("li",{parentName:"ul"},"You will need to read through the Nominatim API to understand how to use it. See the README for more information."),(0,o.kt)("li",{parentName:"ul"},"Be sure to include appropriate error handling and tests.")),(0,o.kt)("p",null,"Part 2:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Be sure to have run the Data Setup part of the README. You should have 150000 rows in a table called amazing_report_3."),(0,o.kt)("li",{parentName:"ul"},"Write a service in Python, which connects directly to the Postgres database, and reads the table amazing_report_3."),(0,o.kt)("li",{parentName:"ul"},"Make a Flask endpoint available which converts the test dataset into JSON, and return it to POSTMAN or browser window."),(0,o.kt)("li",{parentName:"ul"},"Be sure to treat the table to possibly have dynamic column names, and therefore don't hardcode column names in your code."),(0,o.kt)("li",{parentName:"ul"},"This endpoint should be able to take any table in the database, and convert it to JSON, and return it through the Flask endpoint."),(0,o.kt)("li",{parentName:"ul"},"Be sure to include appropriate error handling and tests.")),(0,o.kt)("h3",{id:"bonus-requirements"},"Bonus Requirements:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Optimise your Database to REST JSON code to beat our version. We will time your function on our standard machine and let you know how you score."),(0,o.kt)("li",{parentName:"ul"},"Loop through each of the 150000 rows in the test dataset and populate the address column from the Nominatim response."),(0,o.kt)("li",{parentName:"ul"},"Document your endpoints using Swagger/ OpenAPI."),(0,o.kt)("li",{parentName:"ul"},"Rate limit the Nominatim API to a variable requests per hour, and set the default to 100 requests per hour.")),(0,o.kt)("h3",{id:"help"},"Help"),(0,o.kt)("p",null,"Send an email to ",(0,o.kt)("a",{parentName:"p",href:"mailto:assignment@stackworx.io"},"assignment@stackworx.io")," if you get stuck"))}h.isMDXComponent=!0}}]);