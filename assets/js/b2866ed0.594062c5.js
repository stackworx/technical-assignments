"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[752],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1881:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return m}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=n(4996),l=["components"],s={title:"Brief"},p=void 0,c={unversionedId:"sql/brief",id:"sql/brief",title:"Brief",description:"Please install the required tools before continuing",source:"@site/docs/sql/brief.mdx",sourceDirName:"sql",slug:"/sql/brief",permalink:"/technical-assignments/docs/sql/brief",editUrl:"https://github.com/stackworx/technical-assignments/edit/master/docs/docs/sql/brief.mdx",tags:[],version:"current",frontMatter:{title:"Brief"},sidebar:"someSidebar",previous:{title:"Requirements",permalink:"/technical-assignments/docs/sql/requirements"}},u={},m=[{value:"Requirements",id:"requirements",level:4},{value:"Bonus Requirements:",id:"bonus-requirements",level:3},{value:"Help",id:"help",level:3}],d={toc:m};function h(e){var t=e.components,n=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Please install the ",(0,a.kt)("a",{parentName:"p",href:"requirements"},"required")," tools before continuing"),(0,a.kt)("p",null,"The goal of this assignment is to test your SQL proficiency."),(0,a.kt)("p",null,"First download the project zip from ",(0,a.kt)("a",{href:(0,o.Z)("project/sql-master.zip")},"here"),"."),(0,a.kt)("p",null,"Unzip the file and check the README.md to get going."),(0,a.kt)("h4",{id:"requirements"},"Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"You will only be required to submit your SQL code, and not the generated data or answers as well.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"backup_1_place_id and backup_2_place_id is only used for R5.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"merit is only used for R6.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"R1. Write a query which determines the personnel member that made the most visits. Return only 1 row.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"R2. Write a query which determines the place that each personnel visited the most times. Include the count of times that each personnel visited their most visited place.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"R3. Write a query which will determine if a personnel visited all available places. Each personnel-place combination must be represented in the query result by a boolean, which indicates if the personnel visited that place or not.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"R4. Write a query which will return the total distance (in degrees or in kilometers) travelled by each of the personnel in the last 90 days.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"R5. Add foreign keys between personnel_whereabouts and personnel, as well as between personnel_whereabouts and place. Between personnel_whereabouts and place multiple foreign keys will be required.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'R6. If a personnel visits a place, and the personnel and the place\'s "method" align (i.e personnel.method = "MethodA" and place.method = "MethodA"), the personnel receives double merit for the visit.\nGiven this, determine the end merit balance of each personnel. A normal visit counts as a single merit.')),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"R7. Write a query which will return all place data for all places within 500km of Pretoria Gautrain Station."))),(0,a.kt)("h3",{id:"bonus-requirements"},"Bonus Requirements:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"B1. Add 3x indices to personnel_whereabouts and explain in code comments why the 3x indices you selected were the most important for improving database performance."),(0,a.kt)("li",{parentName:"ul"},"B2. Determine the productivity of personnel_id 1. This can be done by creating a timeline of 1 hour buckets of the personnel's activity,\nand seeing if a visit was made in that hour. If yes, it will be counted as a productive hour. In the last 90 days, how productive (%) was personnel_id 1. You can assume this personnel member is an autonomous vehicle and does not rest at all."),(0,a.kt)("li",{parentName:"ul"},"B3. Determine what the longest period of time is that each personnel stayed at the same place consecutively.\nOnly if the same place was the next visited place (next personnel_whereabouts entry in a timeline), will it count for a consecutive visit. Each personnel will have a different (or the possibly the same) place that they spent the most time at without leaving."),(0,a.kt)("li",{parentName:"ul"},"B4. Write a function which takes a personnel_id as input, and returns the response of B2 for that personnel_id."),(0,a.kt)("li",{parentName:"ul"},"B5. In your own way, determine which personnel member was the most productive. Explain in code comments why this is the case.")),(0,a.kt)("h3",{id:"help"},"Help"),(0,a.kt)("p",null,"Send an email to ",(0,a.kt)("a",{parentName:"p",href:"mailto:assignment@stackworx.io"},"assignment@stackworx.io")," if you get stuck"))}h.isMDXComponent=!0}}]);